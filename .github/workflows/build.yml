name: Build

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

# 添加权限配置
permissions:
  contents: write

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            artifact_name: tfa.exe
            binary_name: tfa.exe
          - os: macos-latest
            target: x86_64-apple-darwin
            artifact_name: tfa-mac
            binary_name: tfa
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            artifact_name: tfa-linux
            binary_name: tfa

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}
      
      - name: Build Windows
        if: matrix.os == 'windows-latest'
        shell: pwsh
        run: |
          cargo build --release --target ${{ matrix.target }}
          Get-ChildItem -Path "target/${{ matrix.target }}/release/"
      
      - name: Build Unix
        if: matrix.os != 'windows-latest'
        shell: bash
        run: |
          cargo build --release --target ${{ matrix.target }}
          ls -la target/${{ matrix.target }}/release/
      
      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: target/${{ matrix.target }}/release/${{ matrix.binary_name }}
          asset_name: ${{ matrix.artifact_name }}
          asset_content_type: application/octet-stream
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 